{"version":3,"file":"IOSNotification.js","sourceRoot":"","sources":["../src/IOSNotification.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from '@unimodules/core';\nimport { BackgroundFetchResultValue } from './IOSNotifications';\n\nimport Notification from './Notification';\nimport { Notifications, IOSAttachment, IOSAttachmentOptions, NativeIOSNotification } from './types';\n\ntype CompletionHandler = (results: BackgroundFetchResultValue) => void;\n\nconst isIOS = Platform.OS === 'ios';\nexport default class IOSNotification {\n  _alertAction?: string;\n\n  // alertAction | N/A\n  _attachments: IOSAttachment[] = [];\n\n  // N/A | attachments\n  _badge?: number;\n\n  // applicationIconBadgeNumber | badge\n  _category?: string;\n\n  _hasAction?: boolean;\n\n  // hasAction | N/A\n  _launchImage?: string;\n\n  // alertLaunchImage | launchImageName\n  _notification: Notification;\n\n  _threadIdentifier?: string; // N/A | threadIdentifier\n\n  _complete?: CompletionHandler;\n\n  _location?: any;\n\n  _summaryArgumentCount?: number;\n  _summaryArgument?: string;\n  _volume?: number;\n  _isCritical: boolean = false;\n\n  constructor(\n    notification: Notification,\n    notifications: Notifications,\n    data?: NativeIOSNotification\n  ) {\n    this._notification = notification;\n\n    if (data) {\n      this._alertAction = data.alertAction;\n      this._attachments = data.attachments;\n      this._badge = data.badge;\n      this._category = data.category;\n      this._location = data.location;\n      this._hasAction = data.hasAction;\n      this._launchImage = data.launchImage;\n      this._threadIdentifier = data.threadIdentifier;\n    }\n\n    const complete = (fetchResult: BackgroundFetchResultValue) => {\n      const { notificationId } = notification;\n      if (notificationId) {\n        notifications.logger.debug(\n          `Completion handler called for notificationId=${notificationId}`\n        );\n      }\n      notifications.nativeModule.complete(notificationId, fetchResult);\n    };\n\n    if (isIOS && notifications && notifications.ios.shouldAutoComplete) {\n      complete(notifications.ios.backgroundFetchResult.noData);\n    } else {\n      this._complete = complete;\n    }\n\n    // Defaults\n    this._attachments = this._attachments || [];\n  }\n\n  get alertAction(): string | undefined {\n    return this._alertAction;\n  }\n\n  get attachments(): IOSAttachment[] {\n    return this._attachments;\n  }\n\n  get badge(): number | undefined {\n    return this._badge;\n  }\n\n  get category(): string | undefined {\n    return this._category;\n  }\n\n  get location(): string | undefined {\n    return this._location;\n  }\n\n  get hasAction(): boolean | undefined {\n    return this._hasAction;\n  }\n\n  get launchImage(): string | undefined {\n    return this._launchImage;\n  }\n\n  get threadIdentifier(): string | undefined {\n    return this._threadIdentifier;\n  }\n\n  get complete(): CompletionHandler | undefined {\n    return this._complete;\n  }\n\n  /**\n   *\n   * @param identifier\n   * @param url\n   * @param options\n   * @returns {Notification}\n   */\n  addAttachment(identifier: string, url: string, options?: IOSAttachmentOptions): Notification {\n    this._attachments.push({\n      identifier,\n      options,\n      url,\n    });\n    return this._notification;\n  }\n\n  /**\n   *\n   * @param alertAction\n   * @returns {Notification}\n   */\n  setAlertAction(alertAction: string): Notification {\n    this._alertAction = alertAction;\n    return this._notification;\n  }\n\n  /**\n   *\n   * @param badge\n   * @returns {Notification}\n   */\n  setBadge(badge: number): Notification {\n    this._badge = badge;\n    return this._notification;\n  }\n\n  /**\n   *\n   * @param category\n   * @returns {Notification}\n   */\n  setCategory(category: string): Notification {\n    this._category = category;\n    return this._notification;\n  }\n\n  setLocation(location): Notification {\n    this._location = location;\n    return this._notification;\n  }\n\n  /**\n   *\n   * @param hasAction\n   * @returns {Notification}\n   */\n  setHasAction(hasAction: boolean): Notification {\n    this._hasAction = hasAction;\n    return this._notification;\n  }\n\n  /**\n   *\n   * @param launchImage\n   * @returns {Notification}\n   */\n  setLaunchImage(launchImage: string): Notification {\n    this._launchImage = launchImage;\n    return this._notification;\n  }\n\n  /**\n   *\n   * @param threadIdentifier\n   * @returns {Notification}\n   */\n  setThreadIdentifier(threadIdentifier: string): Notification {\n    this._threadIdentifier = threadIdentifier;\n    return this._notification;\n  }\n\n  build(): NativeIOSNotification {\n    // TODO: Validation of required fields\n\n    return {\n      summaryArgumentCount: this._summaryArgumentCount,\n      summaryArgument: this._summaryArgument,\n      volume: this._volume,\n      isCritical: this._isCritical,\n      alertAction: this._alertAction,\n      attachments: this._attachments,\n      badge: this._badge,\n      category: this._category,\n      location: this._location,\n      hasAction: this._hasAction,\n      launchImage: this._launchImage,\n      threadIdentifier: this._threadIdentifier,\n    };\n  }\n}\n"]}