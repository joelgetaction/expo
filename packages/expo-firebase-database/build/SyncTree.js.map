{"version":3,"file":"SyncTree.js","sourceRoot":"","sources":["../src/SyncTree.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter, NativeModulesProxy } from '@unimodules/core';\nimport { SharedEventEmitter, utils } from 'expo-firebase-app';\n\nimport DataSnapshot from './DataSnapshot';\nimport DatabaseReference from './Reference';\n\nconst { nativeToJSError } = utils;\n\ntype Listener = (snapshot: DataSnapshot) => any;\n\ntype Registration = {\n  key: string;\n  path: string;\n  once?: boolean;\n  appName: string;\n  eventType: string;\n  listener: Listener;\n  eventRegistrationKey: string;\n  dbURL?: string;\n  ref: DatabaseReference;\n};\n\n/**\n * Internally used to manage firebase database realtime event\n * subscriptions and keep the listeners in sync in js vs native.\n */\nclass SyncTree {\n  _nativeEmitter?: EventEmitter;\n  _reverseLookup: { [key: string]: Registration };\n  _tree: { [key: string]: { [key: string]: { [key: string]: Listener } } };\n\n  constructor() {\n    this._tree = {};\n    this._reverseLookup = {};\n    if (NativeModulesProxy.ExpoFirebaseDatabase) {\n      this._nativeEmitter = new EventEmitter(NativeModulesProxy.ExpoFirebaseDatabase);\n      this._nativeEmitter.addListener(\n        'Expo.Firebase.database_sync_event',\n        this._handleSyncEvent.bind(this)\n      );\n    }\n  }\n\n  /**\n   *\n   * @param event\n   * @private\n   */\n  _handleSyncEvent(event: any): void {\n    if (event.error) {\n      this._handleErrorEvent(event);\n    } else {\n      this._handleValueEvent(event);\n    }\n  }\n\n  /**\n   * Routes native database 'on' events to their js equivalent counterpart.\n   * If there is no longer any listeners remaining for this event we internally\n   * call the native unsub method to prevent further events coming through.\n   *\n   * @param event\n   * @private\n   */\n  async _handleValueEvent(event): Promise<any> {\n    // console.log('SyncTree.VALUE >>>', event);\n    const { key, eventRegistrationKey } = event.registration;\n    const registration = this.getRegistration(eventRegistrationKey);\n\n    if (!registration) {\n      // registration previously revoked\n      // notify native that the registration\n      // no longer exists so it can remove\n      // the native listeners\n      return await NativeModulesProxy.ExpoFirebaseDatabase.off(key, eventRegistrationKey);\n    }\n\n    const { snapshot, previousChildName } = event.data;\n\n    // forward on to users .on(successCallback <-- listener\n    return SharedEventEmitter.emit(\n      eventRegistrationKey,\n      new DataSnapshot(registration.ref, snapshot),\n      previousChildName\n    );\n  }\n\n  /**\n   * Routes native database query listener cancellation events to their js counterparts.\n   *\n   * @param event\n   * @private\n   */\n  _handleErrorEvent(event) {\n    // console.log('SyncTree.ERROR >>>', event);\n    const { code, message } = event.error;\n    const { eventRegistrationKey, registrationCancellationKey } = event.registration;\n\n    const registration = this.getRegistration(registrationCancellationKey);\n\n    if (registration) {\n      // build a new js error - we additionally attach\n      // the ref as a property for easier debugging\n      const error = nativeToJSError(code, message, { ref: registration.ref });\n\n      // forward on to users .on(successCallback, cancellationCallback <-- listener\n      SharedEventEmitter.emit(registrationCancellationKey, error);\n\n      // remove the paired event registration - if we received a cancellation\n      // event then it's guaranteed that they'll be no further value events\n      this.removeRegistration(eventRegistrationKey);\n    }\n  }\n\n  /**\n   * Returns registration information such as appName, ref, path and registration keys.\n   *\n   * @param registration\n   * @return {null}\n   */\n  getRegistration(registration: string): Registration | null {\n    return this._reverseLookup[registration]\n      ? Object.assign({}, this._reverseLookup[registration])\n      : null;\n  }\n\n  /**\n   * Removes all listeners for the specified registration keys.\n   *\n   * @param registrations\n   * @return {number}\n   */\n  removeListenersForRegistrations(registrations: string | string[]): number {\n    if (typeof registrations === 'string') {\n      this.removeRegistration(registrations);\n      SharedEventEmitter.removeAllListeners(registrations);\n      return 1;\n    }\n\n    if (!Array.isArray(registrations)) {\n      return 0;\n    }\n\n    for (let i = 0, len = registrations.length; i < len; i++) {\n      this.removeRegistration(registrations[i]);\n      SharedEventEmitter.removeAllListeners(registrations[i]);\n    }\n\n    return registrations.length;\n  }\n\n  /**\n   * Removes a specific listener from the specified registrations.\n   *\n   * @param listener\n   * @param registrations\n   * @return {Array} array of registrations removed\n   */\n  removeListenerRegistrations(listener: () => any, registrations: string[]) {\n    if (!Array.isArray(registrations)) {\n      return [];\n    }\n    const removed: any[] = [];\n\n    for (let i = 0, len = registrations.length; i < len; i++) {\n      const registration = registrations[i];\n      const subscriptions = SharedEventEmitter._subscriber.getSubscriptionsForType(registration);\n      if (subscriptions) {\n        for (let j = 0, l = subscriptions.length; j < l; j++) {\n          const subscription = subscriptions[j];\n          // The subscription may have been removed during this event loop.\n          // its listener matches the listener in method parameters\n          if (subscription && subscription.listener === listener) {\n            subscription.remove();\n            removed.push(registration);\n            this.removeRegistration(registration);\n          }\n        }\n      }\n    }\n\n    return removed;\n  }\n\n  /**\n   * Returns an array of all registration keys for the specified path.\n   *\n   * @param path\n   * @return {Array}\n   */\n  getRegistrationsByPath(path: string): string[] {\n    const out = [];\n    const eventKeys = Object.keys(this._tree[path] || {});\n\n    for (let i = 0, len = eventKeys.length; i < len; i++) {\n      Array.prototype.push.apply(out, Object.keys(this._tree[path][eventKeys[i]]));\n    }\n\n    return out;\n  }\n\n  /**\n   * Returns an array of all registration keys for the specified path and eventType.\n   *\n   * @param path\n   * @param eventType\n   * @return {Array}\n   */\n  getRegistrationsByPathEvent(path: string, eventType: string): string[] {\n    if (!this._tree[path]) {\n      return [];\n    }\n    if (!this._tree[path][eventType]) {\n      return [];\n    }\n\n    return Object.keys(this._tree[path][eventType]);\n  }\n\n  /**\n   * Returns a single registration key for the specified path, eventType, and listener\n   *\n   * @param path\n   * @param eventType\n   * @param listener\n   * @return {Array}\n   */\n  getOneByPathEventListener(path: string, eventType: string, listener: Function): string | null {\n    if (!this._tree[path]) {\n      return null;\n    }\n    if (!this._tree[path][eventType]) {\n      return null;\n    }\n\n    const registrationsForPathEvent = Object.entries(this._tree[path][eventType]);\n\n    for (let i = 0; i < registrationsForPathEvent.length; i++) {\n      const registration = registrationsForPathEvent[i];\n      if (registration[1] === listener) {\n        return registration[0];\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Register a new listener.\n   *\n   * @param parameters\n   * @param listener\n   * @return {String}\n   */\n  addRegistration(registration: Registration): string {\n    const { eventRegistrationKey, eventType, listener, once, path } = registration;\n\n    if (!this._tree[path]) {\n      this._tree[path] = {};\n    }\n    if (!this._tree[path][eventType]) {\n      this._tree[path][eventType] = {};\n    }\n\n    this._tree[path][eventType][eventRegistrationKey] = listener;\n    this._reverseLookup[eventRegistrationKey] = registration;\n\n    if (once) {\n      SharedEventEmitter.once(\n        eventRegistrationKey,\n        this._onOnceRemoveRegistration(eventRegistrationKey, listener)\n      );\n    } else {\n      SharedEventEmitter.addListener(eventRegistrationKey, listener);\n    }\n\n    return eventRegistrationKey;\n  }\n\n  /**\n   * Remove a registration, if it's not a `once` registration then instructs native\n   * to also remove the underlying database query listener.\n   *\n   * @param registration\n   * @return {boolean}\n   */\n  removeRegistration(registration: string): boolean {\n    if (!this._reverseLookup[registration]) {\n      return false;\n    }\n    const { path, eventType, once } = this._reverseLookup[registration];\n\n    if (!this._tree[path]) {\n      delete this._reverseLookup[registration];\n      return false;\n    }\n\n    if (!this._tree[path][eventType]) {\n      delete this._reverseLookup[registration];\n      return false;\n    }\n\n    // we don't want `once` events to notify native as they're already\n    // automatically unsubscribed on native when the first event is sent\n    const registrationObj = this._reverseLookup[registration];\n    if (registrationObj && !once) {\n      NativeModulesProxy.ExpoFirebaseDatabase.off(registrationObj.key, registration);\n    }\n\n    delete this._tree[path][eventType][registration];\n    delete this._reverseLookup[registration];\n\n    return !!registrationObj;\n  }\n\n  /**\n   * Wraps a `once` listener with a new function that self de-registers.\n   *\n   * @param registration\n   * @param listener\n   * @return {function(...[*])}\n   * @private\n   */\n  _onOnceRemoveRegistration(registration, listener): any {\n    return (...args: any[]) => {\n      this.removeRegistration(registration);\n      listener(...args);\n    };\n  }\n}\n\nexport default new SyncTree();\n"]}