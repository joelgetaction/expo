{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AACtD,OAAO,QAAQ,EAAE,EAAO,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAC9D,OAAO,SAAS,MAAM,aAAa,CAAC;AACpC,OAAO,kBAAkB,MAAM,eAAe,CAAC;AAE/C,MAAM,aAAa,GAAG;IACpB,wBAAwB,EAAE,0CAA0C;CAGrE,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,sBAAsB,CAAC;AAClD,MAAM,CAAC,MAAM,SAAS,GAAG,UAAU,CAAC;AACpC,MAAM,EAAE,CAAC,WAAW,CAAC,EAAE,YAAY,EAAE,GAAG,kBAAkB,CAAC;AAC3D,MAAM,CAAC,MAAM,OAAO,GAAG;IACrB,WAAW,EAAE,YAAY;QACvB,CAAC,CAAC;YACE,SAAS,EAAE,YAAY,CAAC,oBAAoB,IAAI;gBAC9C,KAAK,EAAE,WAAW;aACnB;SACF;QACH,CAAC,CAAC,EAAE;IACN,aAAa,CAAC,OAAgB;QAC5B,IAAI,YAAY,EAAE;YAChB,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;SACrC;IACH,CAAC;CACF,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,OAAO,OAAO,QAAS,SAAQ,UAAU;IAU9C,YAAY,cAA4B,EAAE,SAAkB;QAC1D,IAAI,GAAG,CAAC;QACR,IAAI,GAAG,CAAC;QAER,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;YACtC,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;YACrB,GAAG,GAAG,cAAc,CAAC;SACtB;aAAM;YACL,GAAG,GAAG,cAAc,CAAC;YACrB,GAAG,GAAG,SAAS,IAAI,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC;SAC5C;QAED,yBAAyB;QACzB,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;QAE1C,KAAK,CACH,GAAG,EACH;YACE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;YACpC,UAAU,EAAE,WAAW;YACvB,kBAAkB,EAAE,IAAI;YACxB,mBAAmB,EAAE,IAAI;YACzB,SAAS,EAAE,SAAS;SACrB,EACD,GAAG,CACJ,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QACxB,IAAI,CAAC,mBAAmB,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAExD,IAAI,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE;YAC3B,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SAC3D;QAED,uBAAuB;QACvB,0DAA0D;QAC1D,kGAAkG;QAClG,2EAA2E;QAC3E,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YACrD,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;gBACrC,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,iBAAiB,CAAC;YACpE,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IAED;;;OAGG;IACH,aAAa;QACX,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,CAAC;IACjE,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,SAAS;QACP,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;IAChC,CAAC;IAED;;;;OAIG;IACH,GAAG,CAAC,IAAY;QACd,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACnC,CAAC;IAED;;;OAGG;IACH,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;;AA7FM,mBAAU,GAAG,WAAW,CAAC;AACzB,kBAAS,GAAG,SAAS,CAAC;AACtB,gBAAO,GAAG,OAAO,CAAC","sourcesContent":["import { NativeModulesProxy } from '@unimodules/core';\nimport firebase, { App, ModuleBase } from 'expo-firebase-app';\nimport Reference from './Reference';\nimport TransactionHandler from './transaction';\n\nconst NATIVE_EVENTS = {\n  databaseTransactionEvent: 'Expo.Firebase.database_transaction_event',\n  // 'Expo.Firebase.database_sync_event'\n  // 'database_server_offset', // TODO\n};\n\nexport const MODULE_NAME = 'ExpoFirebaseDatabase';\nexport const NAMESPACE = 'database';\nconst { [MODULE_NAME]: NativeModule } = NativeModulesProxy;\nexport const statics = {\n  ServerValue: NativeModule\n    ? {\n        TIMESTAMP: NativeModule.serverValueTimestamp || {\n          '.sv': 'timestamp',\n        },\n      }\n    : {},\n  enableLogging(enabled: boolean) {\n    if (NativeModule) {\n      NativeModule.enableLogging(enabled);\n    }\n  },\n};\n\n/**\n * @class Database\n */\nexport default class Database extends ModuleBase {\n  static moduleName = MODULE_NAME;\n  static namespace = NAMESPACE;\n  static statics = statics;\n\n  _databaseURL: string;\n  _offsetRef?: Reference;\n  _serverTimeOffset: number;\n  _transactionHandler: TransactionHandler;\n\n  constructor(appOrCustomUrl: App | string, customUrl?: string) {\n    let app;\n    let url;\n\n    if (typeof appOrCustomUrl === 'string') {\n      app = firebase.app();\n      url = appOrCustomUrl;\n    } else {\n      app = appOrCustomUrl;\n      url = customUrl || app.options.databaseURL;\n    }\n\n    // enforce trailing slash\n    url = url.endsWith('/') ? url : `${url}/`;\n\n    super(\n      app,\n      {\n        events: Object.values(NATIVE_EVENTS),\n        moduleName: MODULE_NAME,\n        hasMultiAppSupport: true,\n        hasCustomUrlSupport: true,\n        namespace: NAMESPACE,\n      },\n      url\n    );\n\n    this._serverTimeOffset = 0;\n    this._databaseURL = url;\n    this._transactionHandler = new TransactionHandler(this);\n\n    if (app.options.persistence) {\n      this.nativeModule.setPersistence(app.options.persistence);\n    }\n\n    // server time listener\n    // setTimeout used to avoid setPersistence race conditions\n    // todo move this and persistence to native side, create a db configure() method natively perhaps?\n    // todo and then native can call setPersistence and then emit offset events\n    setTimeout(() => {\n      this._offsetRef = this.ref('.info/serverTimeOffset');\n      this._offsetRef.on('value', snapshot => {\n        this._serverTimeOffset = snapshot.val() || this._serverTimeOffset;\n      });\n    }, 1);\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  getServerTime(): number {\n    return new Date(Date.now() + this._serverTimeOffset).getTime();\n  }\n\n  /**\n   *\n   */\n  goOnline(): void {\n    this.nativeModule.goOnline();\n  }\n\n  /**\n   *\n   */\n  goOffline(): void {\n    this.nativeModule.goOffline();\n  }\n\n  /**\n   * Returns a new firebase reference instance\n   * @param path\n   * @returns {Reference}\n   */\n  ref(path: string): Reference {\n    return new Reference(this, path);\n  }\n\n  /**\n   * Returns the database url\n   * @returns {string}\n   */\n  get databaseUrl(): string {\n    return this._databaseURL;\n  }\n}\n"]}