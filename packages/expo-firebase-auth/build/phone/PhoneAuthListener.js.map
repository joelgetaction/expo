{"version":3,"file":"PhoneAuthListener.js","sourceRoot":"","sources":["../../src/phone/PhoneAuthListener.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,WAAW,CAAC;AAClC,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAC5C,OAAO,EAAE,kBAAkB,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAIzE,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG,KAAK,CAAC;AAExE,MAAM,KAAK,GAAG,QAAQ,CAAC,EAAE,KAAK,KAAK,CAAC;AACpC,MAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,KAAK,SAAS,CAAC;AAgB5C,MAAM,CAAC,OAAO,OAAO,iBAAiB;IAWpC;;;;;;OAMG;IACH,YAAY,IAAU,EAAE,WAAmB,EAAE,OAAgB,EAAE,WAAqB;QAClF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,EAAE,CAAC,CAAC,UAAU;QACzC,IAAI,CAAC,eAAe,GAAG,WAAW,IAAI,KAAK,CAAC;QAC5C,IAAI,CAAC,oBAAoB,GAAG,cAAc,EAAE,CAAC;QAE7C,kBAAkB;QAClB,IAAI,CAAC,eAAe,GAAG;YACrB,QAAQ,EAAE,cAAc,IAAI,CAAC,oBAAoB,aAAa;YAC9D,kBAAkB,EAAE,cAAc,IAAI,CAAC,oBAAoB,uBAAuB;YAClF,oBAAoB,EAAE,cAAc,IAAI,CAAC,oBAAoB,yBAAyB;YACtF,wBAAwB,EAAE,cACxB,IAAI,CAAC,oBACP,6BAA6B;SAC9B,CAAC;QAEF,uBAAuB;QACvB,IAAI,CAAC,aAAa,GAAG;YACnB,WAAW;YACX,KAAK,EAAE,cAAc,IAAI,CAAC,oBAAoB,QAAQ;YACtD,WAAW;YACX,KAAK,EAAE,cAAc,IAAI,CAAC,oBAAoB,QAAQ;YACtD,aAAa;YACb,OAAO,EAAE,cAAc,IAAI,CAAC,oBAAoB,UAAU;SAC3D,CAAC;QAEF,iCAAiC;QACjC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,mCAAmC;QACnC,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,iBAAiB,CACvC,WAAW,EACX,IAAI,CAAC,oBAAoB,EACzB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,eAAe,CACrB,CAAC;SACH;QAED,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,iBAAiB,CAAC,WAAW,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;SACnF;IACH,CAAC;IAED;;;OAGG;IACH,kBAAkB;QAChB,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACjD,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,kBAAkB,CAAC,IAAI,CACrB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YAC1B,yHAAyH;YACzH,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CACnC,CAAC;SACH;IACH,CAAC;IAED;;;;OAIG;IACH,gBAAgB,CAAC,QAAQ;QACvB,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACrE,CAAC;IAED;;;;OAIG;IACH,gBAAgB,CAAC,QAA2B;QAC1C,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED;;;;OAIG;IACH,cAAc,CAAC,QAAQ;QACrB,MAAM,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC;QAC3B,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACrB;QACD,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED;;;;OAIG;IACH,gBAAgB,CAAC,QAAQ;QACvB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;SACzB;QACD,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAChE,CAAC;IAED;;;OAGG;IACH,mBAAmB;QACjB,UAAU,CAAC,GAAG,EAAE;YACd,+CAA+C;YAC/C,qBAAqB;YACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAClD,kBAAkB,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;YAEH,0BAA0B;YAC1B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;gBACtD,kBAAkB,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IAED;;;OAGG;IACH,gBAAgB;QACd,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAC9C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,EAAE;oBACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC;gBACzB,CAAC,CAAC;gBAEF,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC,EAAE;oBAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,OAAO,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/B,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED;;oCAEgC;IAEhC;;;;OAIG;IACH,gBAAgB,CAAC,UAAU;QACzB,MAAM,QAAQ,GAAsB;YAClC,cAAc,EAAE,UAAU,CAAC,cAAc;YACzC,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,MAAM;SACd,CAAC;QAEF,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAEhC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;SACjC;QAED,IAAI,SAAS,EAAE;YACb,uEAAuE;YACvE,8DAA8D;SAC/D;IACH,CAAC;IAED;;;;OAIG;IACH,gCAAgC,CAAC,UAAU;QACzC,MAAM,QAAQ,GAAsB;YAClC,cAAc,EAAE,UAAU,CAAC,cAAc;YACzC,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,SAAS;SACjB,CAAC;QAEF,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAED;;;;OAIG;IACH,4BAA4B,CAAC,UAAU;QACrC,MAAM,QAAQ,GAAsB;YAClC,cAAc,EAAE,UAAU,CAAC,cAAc;YACzC,IAAI,EAAE,UAAU,CAAC,IAAI,IAAI,IAAI;YAC7B,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,UAAU;SAClB,CAAC;QAEF,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED;;;;OAIG;IACH,0BAA0B,CAAC,KAAK;QAC9B,MAAM,QAAQ,GAAsB;YAClC,cAAc,EAAE,KAAK,CAAC,cAAc;YACpC,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,OAAO;SACf,CAAC;QAEF,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,kBAAkB,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1D,QAAQ,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAExE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED;;qBAEiB;IAEjB,EAAE,CACA,KAAa,EACb,QAA+C,EAC/C,OAAyC,EACzC,SAAiD;QAEjD,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;QAC/F,SAAS,CACP,KAAK,KAAK,eAAe,EACzB,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC,CAC3E,CAAC;QACF,SAAS,CACP,UAAU,CAAC,QAAQ,CAAC,EACpB,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,CACxE,CAAC;QAEF,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAEhC,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE;YACvB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SAC5D;QAED,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;YACzB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;SAChE;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;OAGG;IACH,IAAI,CAAC,EAAyC;QAC5C,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,iDAAiD;QACjD,IAAI,IAAI,CAAC,QAAQ;YAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;QACrE,OAAO,SAAS,CAAC,CAAC,gDAAgD;IACpE,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,EAA0B;QAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,iDAAiD;QACjD,IAAI,IAAI,CAAC,QAAQ;YAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;QACtE,OAAO,SAAS,CAAC,CAAC,gDAAgD;IACpE,CAAC;CACF","sourcesContent":["import invariant from 'invariant';\nimport { Platform } from '@unimodules/core';\nimport { SharedEventEmitter, utils, INTERNALS } from 'expo-firebase-app';\n\n// import type Auth from '../';\ntype Auth = any;\nconst { generatePushID, isFunction, isString, nativeToJSError } = utils;\n\nconst isIOS = Platform.OS === 'ios';\nconst isAndroid = Platform.OS === 'android';\n\ntype PhoneAuthSnapshot = {\n  state: 'sent' | 'timeout' | 'verified' | 'error';\n  verificationId: string;\n  code: string | null;\n  error: Error | null;\n};\n\ntype PhoneAuthError = {\n  code: string | null;\n  verificationId: string;\n  message: string | null;\n  stack: string | null;\n};\n\nexport default class PhoneAuthListener {\n  _auth: Auth;\n  _timeout: number;\n  _publicEvents: { [key: string]: any };\n  _internalEvents: { [key: string]: any };\n  _reject: Function | null;\n  _resolve: Function | null;\n  _credential: { [key: string]: any } | null;\n  _promise: Promise<any> | null;\n  _phoneAuthRequestKey: string;\n  _forceResending: any;\n  /**\n   *\n   * @param auth\n   * @param phoneNumber\n   * @param timeout\n   * @param forceResend\n   */\n  constructor(auth: Auth, phoneNumber: string, timeout?: number, forceResend?: boolean) {\n    this._auth = auth;\n    this._reject = null;\n    this._resolve = null;\n    this._promise = null;\n    this._credential = null;\n\n    this._timeout = timeout || 20; // 20 secs\n    this._forceResending = forceResend || false;\n    this._phoneAuthRequestKey = generatePushID();\n\n    // internal events\n    this._internalEvents = {\n      codeSent: `phone:auth:${this._phoneAuthRequestKey}:onCodeSent`,\n      verificationFailed: `phone:auth:${this._phoneAuthRequestKey}:onVerificationFailed`,\n      verificationComplete: `phone:auth:${this._phoneAuthRequestKey}:onVerificationComplete`,\n      codeAutoRetrievalTimeout: `phone:auth:${\n        this._phoneAuthRequestKey\n      }:onCodeAutoRetrievalTimeout`,\n    };\n\n    // user observer events\n    this._publicEvents = {\n      // error cb\n      error: `phone:auth:${this._phoneAuthRequestKey}:error`,\n      // observer\n      event: `phone:auth:${this._phoneAuthRequestKey}:event`,\n      // success cb\n      success: `phone:auth:${this._phoneAuthRequestKey}:success`,\n    };\n\n    // setup internal event listeners\n    this._subscribeToEvents();\n\n    // start verification flow natively\n    if (isAndroid) {\n      this._auth.nativeModule.verifyPhoneNumber(\n        phoneNumber,\n        this._phoneAuthRequestKey,\n        this._timeout,\n        this._forceResending\n      );\n    }\n\n    if (isIOS) {\n      this._auth.nativeModule.verifyPhoneNumber(phoneNumber, this._phoneAuthRequestKey);\n    }\n  }\n\n  /**\n   * Subscribes to all EE events on this._internalEvents\n   * @private\n   */\n  _subscribeToEvents() {\n    const events = Object.keys(this._internalEvents);\n\n    for (let i = 0, len = events.length; i < len; i++) {\n      const type = events[i];\n      SharedEventEmitter.once(\n        this._internalEvents[type],\n        // $FlowExpectedError: Flow doesn't support indexable signatures on classes: https://github.com/facebook/flow/issues/1323\n        this[`_${type}Handler`].bind(this)\n      );\n    }\n  }\n\n  /**\n   * Subscribe a users listener cb to the snapshot events.\n   * @param observer\n   * @private\n   */\n  _addUserObserver(observer) {\n    SharedEventEmitter.addListener(this._publicEvents.event, observer);\n  }\n\n  /**\n   * Send a snapshot event to users event observer.\n   * @param snapshot PhoneAuthSnapshot\n   * @private\n   */\n  _emitToObservers(snapshot: PhoneAuthSnapshot) {\n    SharedEventEmitter.emit(this._publicEvents.event, snapshot);\n  }\n\n  /**\n   * Send a error snapshot event to any subscribed errorCb's\n   * @param snapshot\n   * @private\n   */\n  _emitToErrorCb(snapshot) {\n    const { error } = snapshot;\n    if (this._reject) {\n      this._reject(error);\n    }\n    SharedEventEmitter.emit(this._publicEvents.error, error);\n  }\n\n  /**\n   * Send a success snapshot event to any subscribed completeCb's\n   * @param snapshot\n   * @private\n   */\n  _emitToSuccessCb(snapshot) {\n    if (this._resolve) {\n      this._resolve(snapshot);\n    }\n    SharedEventEmitter.emit(this._publicEvents.success, snapshot);\n  }\n\n  /**\n   * Removes all listeners for this phone auth instance\n   * @private\n   */\n  _removeAllListeners() {\n    setTimeout(() => {\n      // move to next event loop - not sure if needed\n      // internal listeners\n      Object.values(this._internalEvents).forEach(event => {\n        SharedEventEmitter.removeAllListeners(event);\n      });\n\n      // user observer listeners\n      Object.values(this._publicEvents).forEach(publicEvent => {\n        SharedEventEmitter.removeAllListeners(publicEvent);\n      });\n    }, 0);\n  }\n\n  /**\n   * Create a new internal deferred promise, if not already created\n   * @private\n   */\n  _promiseDeferred() {\n    if (!this._promise) {\n      this._promise = new Promise((resolve, reject) => {\n        this._resolve = result => {\n          this._resolve = null;\n          return resolve(result);\n        };\n\n        this._reject = possibleError => {\n          this._reject = null;\n          return reject(possibleError);\n        };\n      });\n    }\n  }\n\n  /* --------------------------\n   --- INTERNAL EVENT HANDLERS\n   ---------------------------- */\n\n  /**\n   * Internal code sent event handler\n   * @private\n   * @param credential\n   */\n  _codeSentHandler(credential) {\n    const snapshot: PhoneAuthSnapshot = {\n      verificationId: credential.verificationId,\n      code: null,\n      error: null,\n      state: 'sent',\n    };\n\n    this._emitToObservers(snapshot);\n\n    if (isIOS) {\n      this._emitToSuccessCb(snapshot);\n    }\n\n    if (isAndroid) {\n      // android can auto retrieve so we don't emit to successCb immediately,\n      // if auto retrieve times out then that will emit to successCb\n    }\n  }\n\n  /**\n   * Internal code auto retrieve timeout event handler\n   * @private\n   * @param credential\n   */\n  _codeAutoRetrievalTimeoutHandler(credential) {\n    const snapshot: PhoneAuthSnapshot = {\n      verificationId: credential.verificationId,\n      code: null,\n      error: null,\n      state: 'timeout',\n    };\n\n    this._emitToObservers(snapshot);\n    this._emitToSuccessCb(snapshot);\n  }\n\n  /**\n   * Internal verification complete event handler\n   * @param credential\n   * @private\n   */\n  _verificationCompleteHandler(credential) {\n    const snapshot: PhoneAuthSnapshot = {\n      verificationId: credential.verificationId,\n      code: credential.code || null,\n      error: null,\n      state: 'verified',\n    };\n\n    this._emitToObservers(snapshot);\n    this._emitToSuccessCb(snapshot);\n    this._removeAllListeners();\n  }\n\n  /**\n   * Internal verification failed event handler\n   * @param state\n   * @private\n   */\n  _verificationFailedHandler(state) {\n    const snapshot: PhoneAuthSnapshot = {\n      verificationId: state.verificationId,\n      code: null,\n      error: null,\n      state: 'error',\n    };\n\n    const { code, message, nativeErrorMessage } = state.error;\n    snapshot.error = nativeToJSError(code, message, { nativeErrorMessage });\n\n    this._emitToObservers(snapshot);\n    this._emitToErrorCb(snapshot);\n    this._removeAllListeners();\n  }\n\n  /* -------------\n   -- PUBLIC API\n   --------------*/\n\n  on(\n    event: string,\n    observer: (snapshot: PhoneAuthSnapshot) => void,\n    errorCb?: (error: PhoneAuthError) => void,\n    successCb?: (snapshot: PhoneAuthSnapshot) => void\n  ): this {\n    invariant(isString(event), INTERNALS.STRINGS.ERROR_MISSING_ARG_NAMED('event', 'string', 'on'));\n    invariant(\n      event === 'state_changed',\n      INTERNALS.STRINGS.ERROR_ARG_INVALID_VALUE('event', 'state_changed', event)\n    );\n    invariant(\n      isFunction(observer),\n      INTERNALS.STRINGS.ERROR_MISSING_ARG_NAMED('observer', 'function', 'on')\n    );\n\n    this._addUserObserver(observer);\n\n    if (isFunction(errorCb)) {\n      SharedEventEmitter.once(this._publicEvents.error, errorCb);\n    }\n\n    if (isFunction(successCb)) {\n      SharedEventEmitter.once(this._publicEvents.success, successCb);\n    }\n\n    return this;\n  }\n\n  /**\n   * Promise .then proxy\n   * @param fn\n   */\n  then(fn: (snapshot: PhoneAuthSnapshot) => void) {\n    this._promiseDeferred();\n    // $FlowFixMe: Unsure how to annotate `bind` here\n    if (this._promise) return this._promise.then.bind(this._promise)(fn);\n    return undefined; // will never get here - just to keep flow happy\n  }\n\n  /**\n   * Promise .catch proxy\n   * @param fn\n   */\n  catch(fn: (error: Error) => void) {\n    this._promiseDeferred();\n    // $FlowFixMe: Unsure how to annotate `bind` here\n    if (this._promise) return this._promise.catch.bind(this._promise)(fn);\n    return undefined; // will never get here - just to keep flow happy\n  }\n}\n"]}