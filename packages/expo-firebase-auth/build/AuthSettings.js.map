{"version":3,"file":"AuthSettings.js","sourceRoot":"","sources":["../src/AuthSettings.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAE5C,MAAM,KAAK,GAAG,QAAQ,CAAC,EAAE,KAAK,KAAK,CAAC;AACpC,MAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,KAAK,SAAS,CAAC;AAI5C,MAAM,CAAC,OAAO,OAAO,YAAY;IAK/B,YAAY,IAAU;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,kCAAkC,GAAG,KAAK,CAAC;IAClD,CAAC;IAED;;;;;OAKG;IACH,IAAI,iCAAiC;QACnC,OAAO,IAAI,CAAC,kCAAkC,CAAC;IACjD,CAAC;IAED;;;;;OAKG;IACH,IAAI,iCAAiC,CAAC,QAAiB;QACrD,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,kCAAkC,GAAG,QAAQ,CAAC;YACnD,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,oCAAoC,CAAC,QAAQ,CAAC,CAAC;SACxE;IACH,CAAC;IAED;;;;;;;;;;;OAWG;IACH,KAAK,CAAC,qCAAqC,CAAC,WAAmB,EAAE,OAAe;QAC9E,IAAI,SAAS,EAAE;YACb,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,qCAAqC,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;SAC5F;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CACF","sourcesContent":["import { Platform } from '@unimodules/core';\n\nconst isIOS = Platform.OS === 'ios';\nconst isAndroid = Platform.OS === 'android';\n\ntype Auth = any;\n\nexport default class AuthSettings {\n  _auth: Auth;\n\n  _appVerificationDisabledForTesting: boolean;\n\n  constructor(auth: Auth) {\n    this._auth = auth;\n    this._appVerificationDisabledForTesting = false;\n  }\n\n  /**\n   * Flag to determine whether app verification should be disabled for testing or not.\n   *\n   * @platform iOS\n   * @return {boolean}\n   */\n  get appVerificationDisabledForTesting(): boolean {\n    return this._appVerificationDisabledForTesting;\n  }\n\n  /**\n   * Flag to determine whether app verification should be disabled for testing or not.\n   *\n   * @platform iOS\n   * @param disabled\n   */\n  set appVerificationDisabledForTesting(disabled: boolean) {\n    if (isIOS) {\n      this._appVerificationDisabledForTesting = disabled;\n      this._auth.nativeModule.setAppVerificationDisabledForTesting(disabled);\n    }\n  }\n\n  /**\n   * The phone number and SMS code here must have been configured in the\n   * Firebase Console (Authentication > Sign In Method > Phone).\n   *\n   * Calling this method a second time will overwrite the previously passed parameters.\n   * Only one number can be configured at a given time.\n   *\n   * @platform Android\n   * @param phoneNumber\n   * @param smsCode\n   * @return {*}\n   */\n  async setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber: string, smsCode: string): Promise<null> {\n    if (isAndroid) {\n      return this._auth.nativeModule.setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode);\n    }\n\n    return null;\n  }\n}\n"]}