{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { NativeModulesProxy } from '@unimodules/core';\nimport { App, SharedEventEmitter, ModuleBase, utils } from 'expo-firebase-app';\nimport invariant from 'invariant';\nimport Blob from './Blob';\nimport CollectionReference from './CollectionReference';\nimport DocumentReference from './DocumentReference';\nimport FieldPath from './FieldPath';\nimport FieldValue from './FieldValue';\nimport GeoPoint from './GeoPoint';\nimport Path from './Path';\nimport Transaction from './Transaction';\nimport TransactionHandler from './TransactionHandler';\nimport WriteBatch from './WriteBatch';\n\nimport DocumentSnapshot from './DocumentSnapshot';\nimport QuerySnapshot from './QuerySnapshot';\n\ntype CollectionSyncEvent = {\n  appName: string;\n  querySnapshot?: QuerySnapshot;\n  error?: Object;\n  listenerId: string;\n  path: string;\n};\n\ntype DocumentSyncEvent = {\n  appName: string;\n  documentSnapshot?: DocumentSnapshot;\n  error?: Object;\n  listenerId: string;\n  path: string;\n};\n\ntype Settings = {\n  host?: string;\n  persistence?: boolean;\n  ssl?: boolean;\n  timestampsInSnapshots?: boolean;\n};\n\nconst { isBoolean, isObject, isString, hop } = utils;\n\nconst NATIVE_EVENTS = {\n  firestoreTransactionEvent: 'Expo.Firebase.firestore_transaction_event',\n  firestoreDocumentSyncEvent: 'Expo.Firebase.firestore_document_sync_event',\n  firestoreCollectionSyncEvent: 'Expo.Firebase.firestore_collection_sync_event',\n};\n\nconst LogLevels = ['debug', 'error', 'silent'];\n\nexport const MODULE_NAME = 'ExpoFirebaseFirestore';\nexport const NAMESPACE = 'firestore';\n\nexport const statics = {\n  Blob,\n  FieldPath,\n  FieldValue,\n  GeoPoint,\n  enableLogging(enabled: boolean): void {\n    // DEPRECATED: Remove method in v4.1.0\n    console.warn(\n      'firebase.firestore.enableLogging is deprecated, use firebase.firestore().setLogLevel instead.'\n    );\n    this.setLogLevel(enabled ? 'debug' : 'silent');\n  },\n  setLogLevel(logLevel: 'debug' | 'error' | 'silent'): void {\n    invariant(\n      LogLevels.includes(logLevel),\n      'Argument `logLevel` must be one of: `debug`, `error`, `silent`'\n    );\n\n    if (NativeModulesProxy[MODULE_NAME]) {\n      NativeModulesProxy[MODULE_NAME].setLogLevel(logLevel);\n    }\n  },\n};\n\n/**\n * @class Firestore\n */\nexport default class Firestore extends ModuleBase {\n  static moduleName = MODULE_NAME;\n  static namespace = NAMESPACE;\n  static statics = statics;\n\n  _referencePath: Path;\n  _transactionHandler: TransactionHandler;\n\n  constructor(app: App) {\n    super(app, {\n      events: Object.values(NATIVE_EVENTS),\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: true,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE,\n    });\n\n    this._referencePath = new Path([]);\n    this._transactionHandler = new TransactionHandler(this);\n\n    SharedEventEmitter.addListener(\n      // sub to internal native event - this fans out to\n      // public event name: onCollectionSnapshot\n      this.getAppEventName(NATIVE_EVENTS.firestoreCollectionSyncEvent),\n      this._onCollectionSyncEvent.bind(this)\n    );\n\n    SharedEventEmitter.addListener(\n      // sub to internal native event - this fans out to\n      // public event name: onDocumentSnapshot\n      this.getAppEventName(NATIVE_EVENTS.firestoreDocumentSyncEvent),\n      this._onDocumentSyncEvent.bind(this)\n    );\n  }\n\n  /**\n   * -------------\n   *  PUBLIC API\n   * -------------\n   */\n\n  /**\n   * Creates a write batch, used for performing multiple writes as a single atomic operation.\n   *\n   * @returns {WriteBatch}\n   */\n  batch(): WriteBatch {\n    return new WriteBatch(this);\n  }\n\n  /**\n   * Gets a CollectionReference instance that refers to the collection at the specified path.\n   *\n   * @param collectionPath\n   * @returns {CollectionReference}\n   */\n  collection(collectionPath: string): CollectionReference {\n    const path = this._referencePath.child(collectionPath);\n    invariant(path.isCollection, 'Argument \"collectionPath\" must point to a collection.');\n\n    return new CollectionReference(this, path);\n  }\n\n  disableNetwork(): void {\n    return this.nativeModule.disableNetwork();\n  }\n\n  /**\n   * Gets a DocumentReference instance that refers to the document at the specified path.\n   *\n   * @param documentPath\n   * @returns {DocumentReference}\n   */\n  doc(documentPath: string): DocumentReference {\n    const path = this._referencePath.child(documentPath);\n    invariant(path.isDocument, 'Argument \"documentPath\" must point to a document.');\n\n    return new DocumentReference(this, path);\n  }\n\n  enableNetwork(): Promise<void> {\n    return this.nativeModule.enableNetwork();\n  }\n\n  /**\n   * Executes the given updateFunction and then attempts to commit the\n   * changes applied within the transaction. If any document read within\n   * the transaction has changed, Cloud Firestore retries the updateFunction.\n   *\n   * If it fails to commit after 5 attempts, the transaction fails.\n   *\n   * @param updateFunction\n   * @returns {void|Promise<any>}\n   */\n  runTransaction(updateFunction: (transaction: Transaction) => Promise<any>): Promise<any> {\n    return this._transactionHandler._add(updateFunction);\n  }\n\n  settings(settings: Settings): Promise<void> {\n    if (!isObject(settings)) {\n      return Promise.reject(new Error('Firestore.settings failed: settings must be an object.'));\n    } else if (hop(settings, 'host') && !isString(settings.host)) {\n      return Promise.reject(\n        new Error('Firestore.settings failed: settings.host must be a string.')\n      );\n    } else if (hop(settings, 'persistence') && !isBoolean(settings.persistence)) {\n      return Promise.reject(\n        new Error('Firestore.settings failed: settings.persistence must be boolean.')\n      );\n    } else if (hop(settings, 'ssl') && !isBoolean(settings.ssl)) {\n      return Promise.reject(new Error('Firestore.settings failed: settings.ssl must be boolean.'));\n    } else if (\n      hop(settings, 'timestampsInSnapshots') &&\n      !isBoolean(settings.timestampsInSnapshots)\n    ) {\n      return Promise.reject(\n        new Error('Firestore.settings failed: settings.timestampsInSnapshots must be boolean.')\n      );\n    }\n    return this.nativeModule.settings(settings);\n  }\n\n  /**\n   * -------------\n   *  UNSUPPORTED\n   * -------------\n   */\n\n  enablePersistence(): Promise<void> {\n    console.warn(\n      'Due to restrictions in the native SDK, persistence must be configured in firebase.firestore().settings()'\n    );\n    return Promise.resolve();\n  }\n\n  /**\n   * -------------\n   *   INTERNALS\n   * -------------\n   */\n\n  /**\n   * Internal collection sync listener\n   *\n   * @param event\n   * @private\n   */\n  _onCollectionSyncEvent(event: CollectionSyncEvent) {\n    if (event.error) {\n      SharedEventEmitter.emit(\n        this.getAppEventName(`onQuerySnapshotError:${event.listenerId}`),\n        event\n      );\n    } else {\n      SharedEventEmitter.emit(\n        this.getAppEventName(`onQuerySnapshot:${event.listenerId}`),\n        event.querySnapshot\n      );\n    }\n  }\n\n  /**\n   * Internal document sync listener\n   *\n   * @param event\n   * @private\n   */\n  _onDocumentSyncEvent(event: DocumentSyncEvent) {\n    if (event.error) {\n      SharedEventEmitter.emit(\n        this.getAppEventName(`onDocumentSnapshotError:${event.listenerId}`),\n        event\n      );\n    } else {\n      SharedEventEmitter.emit(\n        this.getAppEventName(`onDocumentSnapshot:${event.listenerId}`),\n        event.documentSnapshot\n      );\n    }\n  }\n}\n\nexport {\n  CollectionReference,\n  DocumentReference,\n  FieldPath,\n  FieldValue,\n  GeoPoint,\n  Blob,\n  Path,\n  WriteBatch,\n  TransactionHandler,\n  Transaction,\n};\nexport { default as DocumentSnapshot } from './DocumentSnapshot';\nexport { default as DocumentChange } from './DocumentChange';\nexport { default as Query } from './Query';\nexport { default as QuerySnapshot } from './QuerySnapshot';\nexport { default as SnapshotError } from './SnapshotError';\n"]}